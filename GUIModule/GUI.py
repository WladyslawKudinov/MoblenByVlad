import time

from pywebio import start_server
from pywebio.input import input, FLOAT, textarea, actions
from pywebio.output import put_text, put_markdown

from OpenAI.OpenAI import create_responce


def bmi():
    variables = {"name":"", "project_info":"", "detalization_answers":"", "questions":"", "task1":"", "task2":"", "task3":"", "task4":"", "answer1":"", "answer2":"", "answer3":"", "answer4":""}
    responses = []

    stage = 0 # 0/5 understanding the project
    name = input("–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç –ó–∞—Ä–∏! –Ø –æ—á–µ–Ω—å —Ö–æ—Ç–µ–ª–∞ –±—ã —Å —Ç–æ–±–æ–π –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?ü•π", value="–í–∞—Å—è")
    variables["name"] = name
    put_markdown("<h1>–ó–∞—Ä–∏</h1>")
    put_markdown(f"""–ü—Ä–∏–≤–µ—Ç, {name} üëã
    
    <b>–Ø –±—É–¥—É —Ç–≤–æ–∏–º –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º –Ω–∞ –ø—É—Ç–∏ –∫ —É—Å–ø–µ—Ö—É —Å —Ç–≤–æ–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º. –û—á–µ–Ω—å —Ä–∞–¥–∞ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! üòä</b>  
    
    –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –ø–æ–±–æ–ª—å—à–µ –æ —Å–≤–æ–µ–º –ø—Ä–æ–µ–∫—Ç–µ: –∫–∞–∫ –æ–Ω –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è, –∫–∞–∫ —Ç—ã –≤–∏–¥–∏—à—å –µ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ, –∫—Ç–æ —Ç–≤–æ—è —Ü–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è  
    –∏ –∫–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ –æ–Ω —Ä–µ—à–∞–µ—Ç?  

    –•–æ—á—É –ø–æ–Ω—è—Ç—å –≤—Å–µ –¥–µ—Ç–∞–ª–∏, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –Ω–∞–∏–ª—É—á—à–∏–º –æ–±—Ä–∞–∑–æ–º. –ñ–¥—É —Ç–≤–æ–µ–≥–æ –æ—Ç–≤–µ—Ç–∞! üöÄ""")
    project_info = textarea("–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –ø–æ–±–æ–ª—å—à–µ –æ —Å–≤–æ—ë–º –ø—Ä–æ–µ–∫—Ç–µ:", rows=10, value="–ù—É, –Ω–∞—à –ø—Ä–æ–µ–∫—Ç - —ç—Ç–æ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —à–∫–æ–ª. –û–Ω –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∑–∞–¥–∞–Ω–∏—è. –¢–æ –µ—Å—Ç—å –º—ã –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∫—Ä–∞—â–∞–µ–º –≤—Ä–µ–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π, –∞ —É—á–µ–Ω–∏–∫–∞–º –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –¥–∞–µ–º –Ω–∞–¥–µ–∂–Ω—ã–π —Ñ–∏–¥–±–µ–∫. –ü–æ–∫–∞ —á—Ç–æ –º—ã –¥—É–º–∞–ª–∏ –≤–Ω–µ–¥—Ä–∏—Ç—å —ç—Ç–æ –≤ —Ä–∞–±–æ—Ç—É —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤ –ø–æ –æ–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏—é, –Ω–æ –Ω–µ –≤—ã—à–ª–æ. –ü–æ—Ç–æ–º –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª–∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å —à–∫–æ–ª–∞–º, –Ω–æ —Ç–æ–∂–µ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å. –ò —Å–µ–π—á–∞—Å –º—ã –ø—Ä–æ–±—É–µ–º –ø—Ä–æ–¥–∞—Ç—å —ç—Ç–æ –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å–∞–º –≤—Ä–æ–¥–µ –°–∫–∏–ª–ª–±–æ–∫—Å–∞. –ú—ã —Å–µ–π—á–∞—Å MVP –∏ –¥—É–º–∞–µ–º –≤ B2B2C.")
    variables["project_info"] = project_info
    put_markdown(f"<h1>{variables['name']}</h1>")
    put_markdown(f"{project_info}")

    stage = 1 # 1/5 selecting additional questions for detalization
    put_markdown(f"""<h1>–ó–∞—Ä–∏</h1>""")
    response = create_responce(variables, stage) # json response
    first_response = response["first"]
    second_response = response["second"]
    variables["questions"] = second_response
    put_markdown(first_response+"<br>"+second_response)
    detalization_answers = textarea("–†–∞—Å–∫—Ä–æ–π –¥–µ—Ç–∞–ª–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ!")
    variables["detalization_answers"] = detalization_answers
    put_markdown(f"<h1>{variables['name']}</h1>")
    put_markdown(f"{detalization_answers}")

    stage = 2 # 2/5 analyzing the answers on additional questions
    put_markdown(f"""<h1>–ó–∞—Ä–∏</h1>""")
    response = create_responce(variables, stage)
    responses.append(response.choices[0].message.content)
    put_markdown(response.choices[0].message.content)
    put_markdown("<h3>–¢–µ–ø–µ—Ä—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –æ—Ç—Ç–æ—á–∏—Ç—å –Ω–∞–≤—ã–∫–∏ –∏ —Ä–µ—à–∏—Ç—å —ç—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã, —è —Ö–æ—á—É –¥–∞—Ç—å —Ç–µ–±–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞–Ω–∏–π. –ì–æ—Ç–æ–≤? üöÄ</h3>")
    actions(label="–ì–æ—Ç–æ–≤ –∫ –∑–∞–¥–∞–Ω–∏—è–º?", buttons=[
        {'label': '–î–∞!', 'value': 'continue', 'color': 'success'},
        {'label': '–ó–∞–≤–µ—Ä—à–∏—Ç—å.', 'value': 'finish', 'color': 'danger'}
    ])

    if actions == "finish":
        put_markdown("<h1>–ó–∞—Ä–∏</h1>")
        put_markdown(f"""<h3>–ñ–∞–ª—å, —á—Ç–æ —Ç—ã –Ω–µ –≥–æ—Ç–æ–≤ –∫ –∑–∞–¥–∞–Ω–∏—è–º. –ù–∞–¥–µ—é—Å—å, —á—Ç–æ —Ç—ã –≤–µ—Ä–Ω–µ—à—å—Å—è, –∫–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤. –£–¥–∞—á–∏! üçÄ</h3>""")
        return
    else:
        put_markdown("<h1>–ó–∞—Ä–∏</h1>")
        put_markdown(f"""<h3>–û—Ç–ª–∏—á–Ω–æ! –¢–æ–≥–¥–∞ –¥–∞–≤–∞–π –Ω–∞—á–Ω–µ–º! üöÄ</h3>""")

    stage = 3 # 3/5 generating tasks
    response = create_responce(variables, stage)
    for i in range(4):
        variables[f"task{i+1}"] = response[f"task{i+1}"]

    put_markdown(f"""<h1>–ó–∞—Ä–∏</h1>""")
    put_markdown(f"""<h3>–í–æ—Ç —Ç–≤–æ–µ –ø–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ:</h3>""")
    put_markdown(f"""<h3>{variables["task1"]}</h3>""")
    variables["answer1"] = textarea("–í–∞—à –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ:")

    put_markdown(f"""<h1>–ó–∞—Ä–∏</h1>""")
    put_markdown(f"""<h3>–í–æ—Ç —Ç–≤–æ–µ –≤—Ç–æ—Ä–æ–µ –∑–∞–¥–∞–Ω–∏–µ:</h3>""")
    put_markdown(f"""<h3>{variables["task2"]}</h3>""")
    variables["answer2"] = textarea("–í–∞—à –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ:")

    put_markdown(f"""<h1>–ó–∞—Ä–∏</h1>""")
    put_markdown(f"""<h3>–í–æ—Ç —Ç–≤–æ–µ —Ç—Ä–µ—Ç—å–µ –∑–∞–¥–∞–Ω–∏–µ:</h3>""")
    put_markdown(f"""<h3>{variables["task3"]}</h3>""")
    variables["answer3"] = textarea("–í–∞—à –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ:")

    put_markdown(f"""<h1>–ó–∞—Ä–∏</h1>""")
    put_markdown(f"""<h3>–í–æ—Ç —Ç–≤–æ–µ —á–µ—Ç–≤–µ—Ä—Ç–æ–µ –∑–∞–¥–∞–Ω–∏–µ:</h3>""")
    put_markdown(f"""<h3>{variables["task4"]}</h3>""")
    variables["answer4"] = textarea("–í–∞—à –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ:")

    stage = 4 # 4/5 analyzing the answers on tasks
    put_markdown(f"""<h1>–ó–∞—Ä–∏</h1>""")
    response = create_responce(variables, stage)
    responses.append(response.choices[0].message.content)
    put_markdown(response.choices[0].message.content)

    put_markdown(f"""<h1>–ó–∞—Ä–∏</h1>""")
    put_markdown(f"""<h3>–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –ø—Ä–æ–µ–∫—Ç–µ! üöÄ</h3>""")




